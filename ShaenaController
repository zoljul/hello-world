using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.SceneManagement;

public class ShaenaController : MonoBehaviour
{
    private float currentSpeed;
    public float runningSpeed = 12.0f;
    public float walkingSpeed = 7.0f;
    public bool isInRoom;
    private float horizontal;
    private float vertical;
    private Rigidbody2D rigidbody2d;
    private Scene scene;
    private Animator animator;
    private Vector2 lookDirection = new Vector2(1, 0);

    public int maxHealth = 4;
    public int health { get { return currentHealth; } }
    public int currentHealth;

    void Start()
    {
        currentSpeed = walkingSpeed;
        scene = SceneManager.GetActiveScene();
        rigidbody2d = GetComponent<Rigidbody2D>();
        if (scene.name == "MainScene")
            transform.position = GameManager.Instance.SpawnLocation;
        animator = GetComponent<Animator>();
        //currentHealth = maxHealth;
        currentHealth = 3;
    }

    void Update()
    {
        if (Input.GetKey(KeyCode.LeftShift))
            currentSpeed = runningSpeed;
        else
            currentSpeed = walkingSpeed;
        horizontal = Input.GetAxis("Horizontal");
        if (isInRoom)
        {
            vertical = Input.GetAxis("Vertical");
        }
        else
        {
            vertical = 0.0f;
        }
        Vector2 move = new Vector2(horizontal, vertical);
        if (!Mathf.Approximately(move.x, 0.0f) || !Mathf.Approximately(move.y, 0.0f))
        {
            lookDirection.Set(move.x, 0.0f);
            lookDirection.Normalize();
        }
        animator.SetFloat("Look X", lookDirection.x);
        animator.SetFloat("Speed", move.magnitude * currentSpeed);
    }

    void FixedUpdate()
    {
        Vector2 position = rigidbody2d.position;
        position.x = position.x + currentSpeed * horizontal * Time.deltaTime;
        if (isInRoom)
            position.y = position.y + currentSpeed * vertical * Time.deltaTime;
        rigidbody2d.MovePosition(position);
    }

    public void ChangeHealth(int amount)
    {
        currentHealth = Mathf.Clamp(currentHealth + amount, 0, maxHealth);
        Debug.Log(currentHealth + "/" + maxHealth);
    }

    public int GetCurrentHealth()
    {
        return currentHealth;
    }
}
